% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/top_taxa.R
\name{top_taxa}
\alias{top_taxa}
\title{Get the most abundant taxa from a phyloseq object}
\usage{
top_taxa(
  ps_obj,
  n_taxa = 1,
  grouping = NULL,
  by_proportion = TRUE,
  FUN = mean,
  ...
)
}
\arguments{
\item{ps_obj}{A phyloseq object with an \code{otu_table} and a
\code{tax_table}.}

\item{n_taxa}{The number of top taxa to identify.}

\item{grouping}{A character vector with the names of one or more grouping
factors found in the \code{tax_table}. To group by sample, specify \code{sample_id}.}

\item{by_proportion}{Converts absolute abundances to proportions before
calculating the summary statistic (default = \code{TRUE}).}

\item{FUN}{Function that returns a single summary statistic from an input vector,
e.g. \code{sum}, \code{mean} (default) or \code{median}}

\item{...}{Additional arguments to be passed to \code{FUN}.}
}
\value{
A tibble with the rank, taxon id, grouping factors, abundance summary
statistic and taxonomy.
}
\description{
This function identifies the top \eqn{n} taxa in a phyloseq object. Users specify the
summary statistic that is used to rank the taxa, e.g. \code{sum}, \code{mean} or
\code{median}. Furthermore, it is possible to add one or more grouping
factors from the \code{tax_table} to get group-specific top \eqn{n} taxa.
The top taxa can be identified based on the absolute abundances or proportions.
}
\details{
This function, together with \code{\link[fantaxtic]{collapse_taxa}}, replaces
\code{\link[fantaxtic]{get_top_taxa}}. Identical output can be obtained  by setting
\code{FUN = sum}.
}
\examples{
data(GlobalPatterns)

# Top 10 most abundant ASVs over all samples
top_taxa(GlobalPatterns, 10)

# Top 10 most abundant ASVs over all samples by median abundance
top_taxa(GlobalPatterns, 10, FUN = median, na.rm = T)

# Top 10 most abundant ASVs over all samples using absolute abundances
top_taxa(GlobalPatterns, 10, by_proportion = FALSE)

# Top 2 most abundant ASVs per sample
top_taxa(GlobalPatterns, 2, grouping = "sample_id")

# Top 2 most abundant ASVs per sample type
top_taxa(GlobalPatterns, 2, grouping = "SampleType")

# Top 2 most abundant ASVs per sample type and group
set.seed(1)
sample_data(GlobalPatterns)$group <- as.factor(rbinom(nsamples(GlobalPatterns), 1, .5))
top_taxa(GlobalPatterns, 2, grouping = c("SampleType", "group"))
}
